name: formatting-check

on:
  push:
    # Only run on pushes to pull request branches
    branches-ignore:
      - 'master'
      - 'master-*'
  pull_request:

jobs:

  # Checking for correct formatting of branch for C code changes
  check-formatting:
    name: Formatting Check (clang 9)
    runs-on: ubuntu-18.04
    container: ubuntu:18.04
    steps:

      # Cache Rust stuff.
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: cargo-registry

      - name: Install dependencies
        run: |
          apt update
          apt -y install \
                libpcre3 \
                libpcre3-dev \
                build-essential \
                autoconf \
                automake \
                git \
                libtool \
                libpcap-dev \
                libnet1-dev \
                libyaml-0-2 \
                libyaml-dev \
                libcap-ng-dev \
                libcap-ng0 \
                libmagic-dev \
                libnetfilter-queue-dev \
                libnetfilter-queue1 \
                libnfnetlink-dev \
                libnfnetlink0 \
                libhiredis-dev \
                libjansson-dev \
                libpython2.7 \
                make \
                python \
                rustc \
                software-properties-common \
                wget \
                zlib1g \
                zlib1g-dev
      - name: Install packages for clang-format 9
        run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
          # no need to install full clang using https://apt.llvm.org/llvm.sh
          # using clang 9
          add-apt-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main"
          apt-get update
          apt-get install -y clang-format-9
      - name: Install cbindgen
        run: cargo install --force --debug --version 0.14.1 cbindgen
      - run: echo "::add-path::$HOME/.cargo/bin"
      # Github will add a "merge commit" from our branch to master and check
      # this out instead of the original last commit on the branch.
      # This screws up git clang-format as it'll also format the "merge commit"
      # and report any formatting issues in the "merge commit".
      #
      # The "merge commit" only gets created in case there are any new commits
      # on master since we branched off.
      #
      # However, we don't care about the new commits on master. So let's use
      # the real branch's HEAD commit.
      - name: Checkout HEAD on branch, not merge commit!
        uses: actions/checkout@v1
        # Use last commit of branch, not potential merge commit!
        #
        # This works perfectly well on private repos, but not for
        # pull requests from forks to the OISF repo as the latter one
        # does not know the branch (from the private repo). Argh.
#        with:
#          ref: ${{ github.head_ref }} # check out branch

      # Manually ignore the merge commit as none of the things tried seem
      # to work for pull requests from forks into the OISF repo.
      - name: Peel off potential merge request
        run: |
          # Commit history example in case github added merge, i.e. if
          # you did git log --pretty=oneline -2:
          #   sha_1 Merge sha_2 into latest_sha_on_master
          #   sha_2 This is the real latest commit on branch
          git log --pretty=oneline -2
          last_commit_subject=$(git log --pretty=%s -1)
          second_last_commit_sha=$(git log --pretty=%H -2 |tail -1)
          echo "last_commit_subject: $last_commit_subject"
          echo "second_last_commit_sha: $second_last_commit_sha"
          if [ $last_commit_subject =~ ^Merge\ ${second_last_commit_sha}\ into\ [0-9a-zA-Z]*$ ]; then
              # Last commit was a merge to master - ignore
              echo "Ignoring github merge commit..."
              git checkout HEAD^
          else
              echo "No github merge commit found"
          endif
        shell: bash {0}
      - run: git clone https://github.com/OISF/libhtp -b 0.5.x
      - run: ./autogen.sh
      - run: ./configure --enable-unittests
      - name: Check formatting
        run: |
          # Do not use make as it hides the script's exit code
          # make diffstat-style-branch >> check_formatting_log.txt 2>&1
          ./scripts/clang-format.sh check-branch --make --diffstat --show-commits  >> check_formatting_log.txt 2>&1
          rc=$?
          if [ $rc -eq 0 ]; then
              cat check_formatting_log.txt
              echo "Formatting is following code style guide"
          elif [ $rc -eq 1 ]; then
              # limit output as it might be a lot in the worst case
              tail -n 100 check_formatting_log.txt
              echo "::warning ::Formatting is not following code style guide!"
          else
              cat check_formatting_log.txt
              # use last output line as error
              last_line=$(tail -n 1 check_formatting_log.txt)
              echo "::error ::$last_line"
              exit 1
          fi
        shell: bash {0}
